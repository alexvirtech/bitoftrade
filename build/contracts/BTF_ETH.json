{
  "fileName": "BTF_ETH.sol",
  "contractName": "BTF_ETH",
  "source": "/*\r\n    The contract implements exchange BTF-ETH\r\n*/\r\npragma solidity ^0.7.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/ownable.sol\";\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\";\r\n\r\n/*\r\n    *** Tasks ***\r\n    - owner\r\n        //- deposit/withdrawal for BTF \r\n        //- set price      \r\n        - withdraw ETH\r\n        //- check balance\r\n    - user\r\n        //- get price\r\n        //- exchange\r\n*/\r\ncontract BTF_ETH is Ownable {\r\n    bool public IsActive = true;\r\n    address public contractOwner;\r\n    address public tokenAddress;\r\n    //\r\n    uint256 public Price; // BTF/ETH current price\r\n\r\n    using SafeMath for uint256;\r\n\r\n    modifier onlyContractOwner() {\r\n        require(\r\n            msg.sender == contractOwner,\r\n            \"error account - must be contract owner\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    constructor(address _tokenAddress) public payable {\r\n        contractOwner = msg.sender;\r\n        tokenAddress = _tokenAddress;\r\n    }\r\n\r\n    function SetPrice(uint256 _price) public onlyContractOwner {\r\n        //\r\n        Price = _price;\r\n    }\r\n\r\n    // check BTF balance\r\n   /*  function ShowBalance() public view returns (uint256) {\r\n        ERC20 token = ERC20(tokenAddress);\r\n        return token.balanceOf(address(this));\r\n    } */\r\n\r\n    // withdraw - to deposit owner address\r\n    function WithdrawBTF(uint256 _amount) public payable onlyContractOwner {\r\n        ERC20 token = ERC20(tokenAddress);\r\n        require(\r\n            token.balanceOf(address(this)) >= _amount,\r\n            \"insufficient BTF balance for withdrawal\"\r\n        );\r\n        token.transfer(contractOwner, _amount);\r\n    }\r\n\r\n    function WithdrawETH(uint256 _amount) public payable onlyContractOwner {\r\n        ERC20 token = ERC20(tokenAddress);\r\n        require(\r\n            address(this).balance >= _amount,            \r\n            \"insufficient ETH balance for withdrawal\"\r\n        );\r\n        address payable rec = payable(contractOwner);\r\n        rec.transfer(_amount);        \r\n    }\r\n\r\n    //https://ethereum.org/en/developers/tutorials/transfers-and-approval-of-erc-20-tokens-from-a-solidity-smart-contract/\r\n    function Change() public payable {\r\n        ERC20 token = ERC20(tokenAddress);       \r\n        uint256 amountTobuy = (msg.value*10**18).div(Price); \r\n        uint256 curBalance = token.balanceOf(address(this));\r\n        require(amountTobuy > 0, \"You need to send some ether\");\r\n        require(amountTobuy <= curBalance, \"Not enough tokens in the reserve\");\r\n        token.transfer(msg.sender, amountTobuy);         \r\n    }\r\n}\r\n",
  "sourcePath": "contracts\\BTF_ETH.sol",
  "sourceMap": "500:2150:6:-:0;;;558:4;535:27;;;;;;;;;;;;;;;;;;;;918:134;;;;;;;;;;;;;;;;;;;;;:::i;:::-;882:17:1;902:12;:10;;;:12;;:::i;:::-;882:32;;933:9;924:6;;:18;;;;;;;;;;;;;;;;;;990:9;957:43;;986:1;957:43;;;;;;;;;;;;848:159;995:10:6;979:13;;:26;;;;;;;;;;;;;;;;;;1031:13;1016:12;;:28;;;;;;;;;;;;;;;;;;918:134;500:2150;;598:104:0;651:15;685:10;678:17;;598:104;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;:::i;:::-;68:71;;;;:::o;146:263::-;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;:::i;:::-;319:74;;291:108;223:186;;;;:::o;416:91::-;;478:24;496:5;478:24;:::i;:::-;467:35;;461:46;;;:::o;514:121::-;;587:42;580:5;576:54;565:65;;559:76;;;:::o;642:117::-;711:24;729:5;711:24;:::i;:::-;704:5;701:35;691:2;;750:1;747;740:12;691:2;685:74;:::o;500:2150:6:-;;;;;;;",
  "deployedSourceMap": "500:2150:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2224:423;;;:::i;:::-;;535:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1060:104;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1706:145:1;;;;;;;;;;;;;:::i;:::-;;1083:77;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1730:362:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;604:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;646:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;569:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2000:240:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1409:313:6;811:13;;;;;;;;;;;797:27;;:10;:27;;;775:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1491:11:::1;1511:12;;;;;;;;;;;1491:33;;1591:7;1557:5;:15;;;1581:4;1557:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;1535:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;1676:5;:14;;;1691:13;;;;;;;;;;;1706:7;1676:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;901:1;1409:313:::0;:::o;2224:423::-;2268:11;2288:12;;;;;;;;;;;2268:33;;2319:19;2341:29;2364:5;;2352:6;2342:9;:16;2341:22;;:29;;;;:::i;:::-;2319:51;;2382:18;2403:5;:15;;;2427:4;2403:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2382:51;;2466:1;2452:11;:15;2444:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2533:10;2518:11;:25;;2510:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2591:5;:14;;;2606:10;2618:11;2591:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2224:423;;;:::o;535:27::-;;;;;;;;;;;;;:::o;1060:104::-;811:13;;;;;;;;;;;797:27;;:10;:27;;;775:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1150:6:::1;1142:5;:14;;;;1060:104:::0;:::o;1706:145:1:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1812:1:::1;1775:40;;1796:6;::::0;::::1;;;;;;;;1775:40;;;;;;;;;;;;1842:1;1825:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1706:145::o:0;1083:77::-;1121:7;1147:6;;;;;;;;;;;1140:13;;1083:77;:::o;1730:362:6:-;811:13;;;;;;;;;;;797:27;;:10;:27;;;775:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1812:11:::1;1832:12;;;;;;;;;;;1812:33;;1903:7;1886:4;1878:21;;;:32;;1856:133;;;;;;;;;;;;:::i;:::-;;;;;;;;;2000:19;2030:13;;;;;;;;;;;2000:44;;2055:3;:12;;:21;2068:7;2055:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;901:1;;1730:362:::0;:::o;604:27::-;;;;;;;;;;;;;:::o;646:20::-;;;;:::o;569:28::-;;;;;;;;;;;;;:::o;2000:240:1:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2108:1:::1;2088:22;;:8;:22;;;;2080:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2197:8;2168:38;;2189:6;::::0;::::1;;;;;;;;2168:38;;;;;;;;;;;;2225:8;2216:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2000:240:::0;:::o;3109:130:2:-;3167:7;3193:39;3197:1;3200;3193:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3186:46;;3109:130;;;;:::o;598:104:0:-;651:15;685:10;678:17;;598:104;:::o;3721:272:2:-;3807:7;3838:1;3834;:5;3841:12;3826:28;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3864:9;3880:1;3876;:5;;;;;;3864:17;;3985:1;3978:8;;;3721:272;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;:::i;:::-;57:78;;;;:::o;142:128::-;;223:6;217:13;208:22;;235:30;259:5;235:30;:::i;:::-;202:68;;;;:::o;277:130::-;;357:6;344:20;335:29;;369:33;396:5;369:33;:::i;:::-;329:78;;;;:::o;414:134::-;;498:6;492:13;483:22;;510:33;537:5;510:33;:::i;:::-;477:71;;;;:::o;555:241::-;;659:2;647:9;638:7;634:23;630:32;627:2;;;675:1;672;665:12;627:2;710:1;727:53;772:7;763:6;752:9;748:22;727:53;:::i;:::-;717:63;;689:97;621:175;;;;:::o;803:257::-;;915:2;903:9;894:7;890:23;886:32;883:2;;;931:1;928;921:12;883:2;966:1;983:61;1036:7;1027:6;1016:9;1012:22;983:61;:::i;:::-;973:71;;945:105;877:183;;;;:::o;1067:241::-;;1171:2;1159:9;1150:7;1146:23;1142:32;1139:2;;;1187:1;1184;1177:12;1139:2;1222:1;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1201:97;1133:175;;;;:::o;1315:263::-;;1430:2;1418:9;1409:7;1405:23;1401:32;1398:2;;;1446:1;1443;1436:12;1398:2;1481:1;1498:64;1554:7;1545:6;1534:9;1530:22;1498:64;:::i;:::-;1488:74;;1460:108;1392:186;;;;:::o;1585:142::-;1676:45;1715:5;1676:45;:::i;:::-;1671:3;1664:58;1658:69;;:::o;1734:113::-;1817:24;1835:5;1817:24;:::i;:::-;1812:3;1805:37;1799:48;;:::o;1854:104::-;1931:21;1946:5;1931:21;:::i;:::-;1926:3;1919:34;1913:45;;:::o;1965:347::-;;2077:39;2110:5;2077:39;:::i;:::-;2128:71;2192:6;2187:3;2128:71;:::i;:::-;2121:78;;2204:52;2249:6;2244:3;2237:4;2230:5;2226:16;2204:52;:::i;:::-;2277:29;2299:6;2277:29;:::i;:::-;2272:3;2268:39;2261:46;;2057:255;;;;;:::o;2320:375::-;;2480:67;2544:2;2539:3;2480:67;:::i;:::-;2473:74;;2580:34;2576:1;2571:3;2567:11;2560:55;2649:8;2644:2;2639:3;2635:12;2628:30;2686:2;2681:3;2677:12;2670:19;;2466:229;;;:::o;2704:376::-;;2864:67;2928:2;2923:3;2864:67;:::i;:::-;2857:74;;2964:34;2960:1;2955:3;2951:11;2944:55;3033:9;3028:2;3023:3;3019:12;3012:31;3071:2;3066:3;3062:12;3055:19;;2850:230;;;:::o;3089:332::-;;3249:67;3313:2;3308:3;3249:67;:::i;:::-;3242:74;;3349:34;3345:1;3340:3;3336:11;3329:55;3412:2;3407:3;3403:12;3396:19;;3235:186;;;:::o;3430:376::-;;3590:67;3654:2;3649:3;3590:67;:::i;:::-;3583:74;;3690:34;3686:1;3681:3;3677:11;3670:55;3759:9;3754:2;3749:3;3745:12;3738:31;3797:2;3792:3;3788:12;3781:19;;3576:230;;;:::o;3815:375::-;;3975:67;4039:2;4034:3;3975:67;:::i;:::-;3968:74;;4075:34;4071:1;4066:3;4062:11;4055:55;4144:8;4139:2;4134:3;4130:12;4123:30;4181:2;4176:3;4172:12;4165:19;;3961:229;;;:::o;4199:332::-;;4359:67;4423:2;4418:3;4359:67;:::i;:::-;4352:74;;4459:34;4455:1;4450:3;4446:11;4439:55;4522:2;4517:3;4513:12;4506:19;;4345:186;;;:::o;4540:327::-;;4700:67;4764:2;4759:3;4700:67;:::i;:::-;4693:74;;4800:29;4796:1;4791:3;4787:11;4780:50;4858:2;4853:3;4849:12;4842:19;;4686:181;;;:::o;4875:113::-;4958:24;4976:5;4958:24;:::i;:::-;4953:3;4946:37;4940:48;;:::o;4995:222::-;;5122:2;5111:9;5107:18;5099:26;;5136:71;5204:1;5193:9;5189:17;5180:6;5136:71;:::i;:::-;5093:124;;;;:::o;5224:349::-;;5387:2;5376:9;5372:18;5364:26;;5401:79;5477:1;5466:9;5462:17;5453:6;5401:79;:::i;:::-;5491:72;5559:2;5548:9;5544:18;5535:6;5491:72;:::i;:::-;5358:215;;;;;:::o;5580:333::-;;5735:2;5724:9;5720:18;5712:26;;5749:71;5817:1;5806:9;5802:17;5793:6;5749:71;:::i;:::-;5831:72;5899:2;5888:9;5884:18;5875:6;5831:72;:::i;:::-;5706:207;;;;;:::o;5920:210::-;;6041:2;6030:9;6026:18;6018:26;;6055:65;6117:1;6106:9;6102:17;6093:6;6055:65;:::i;:::-;6012:118;;;;:::o;6137:310::-;;6284:2;6273:9;6269:18;6261:26;;6334:9;6328:4;6324:20;6320:1;6309:9;6305:17;6298:47;6359:78;6432:4;6423:6;6359:78;:::i;:::-;6351:86;;6255:192;;;;:::o;6454:416::-;;6654:2;6643:9;6639:18;6631:26;;6704:9;6698:4;6694:20;6690:1;6679:9;6675:17;6668:47;6729:131;6855:4;6729:131;:::i;:::-;6721:139;;6625:245;;;:::o;6877:416::-;;7077:2;7066:9;7062:18;7054:26;;7127:9;7121:4;7117:20;7113:1;7102:9;7098:17;7091:47;7152:131;7278:4;7152:131;:::i;:::-;7144:139;;7048:245;;;:::o;7300:416::-;;7500:2;7489:9;7485:18;7477:26;;7550:9;7544:4;7540:20;7536:1;7525:9;7521:17;7514:47;7575:131;7701:4;7575:131;:::i;:::-;7567:139;;7471:245;;;:::o;7723:416::-;;7923:2;7912:9;7908:18;7900:26;;7973:9;7967:4;7963:20;7959:1;7948:9;7944:17;7937:47;7998:131;8124:4;7998:131;:::i;:::-;7990:139;;7894:245;;;:::o;8146:416::-;;8346:2;8335:9;8331:18;8323:26;;8396:9;8390:4;8386:20;8382:1;8371:9;8367:17;8360:47;8421:131;8547:4;8421:131;:::i;:::-;8413:139;;8317:245;;;:::o;8569:416::-;;8769:2;8758:9;8754:18;8746:26;;8819:9;8813:4;8809:20;8805:1;8794:9;8790:17;8783:47;8844:131;8970:4;8844:131;:::i;:::-;8836:139;;8740:245;;;:::o;8992:416::-;;9192:2;9181:9;9177:18;9169:26;;9242:9;9236:4;9232:20;9228:1;9217:9;9213:17;9206:47;9267:131;9393:4;9267:131;:::i;:::-;9259:139;;9163:245;;;:::o;9415:222::-;;9542:2;9531:9;9527:18;9519:26;;9556:71;9624:1;9613:9;9609:17;9600:6;9556:71;:::i;:::-;9513:124;;;;:::o;9644:122::-;;9738:5;9732:12;9722:22;;9703:63;;;:::o;9774:163::-;;9889:6;9884:3;9877:19;9926:4;9921:3;9917:14;9902:29;;9870:67;;;;:::o;9945:91::-;;10007:24;10025:5;10007:24;:::i;:::-;9996:35;;9990:46;;;:::o;10043:85::-;;10116:5;10109:13;10102:21;10091:32;;10085:43;;;:::o;10135:121::-;;10208:42;10201:5;10197:54;10186:65;;10180:76;;;:::o;10263:72::-;;10325:5;10314:16;;10308:27;;;:::o;10342:129::-;;10429:37;10460:5;10429:37;:::i;:::-;10416:50;;10410:61;;;:::o;10478:121::-;;10557:37;10588:5;10557:37;:::i;:::-;10544:50;;10538:61;;;:::o;10606:108::-;;10685:24;10703:5;10685:24;:::i;:::-;10672:37;;10666:48;;;:::o;10722:268::-;10787:1;10794:101;10808:6;10805:1;10802:13;10794:101;;;10884:1;10879:3;10875:11;10869:18;10865:1;10860:3;10856:11;10849:39;10830:2;10827:1;10823:10;10818:15;;10794:101;;;10910:6;10907:1;10904:13;10901:2;;;10975:1;10966:6;10961:3;10957:16;10950:27;10901:2;10771:219;;;;:::o;10998:97::-;;11086:2;11082:7;11077:2;11070:5;11066:14;11062:28;11052:38;;11046:49;;;:::o;11103:117::-;11172:24;11190:5;11172:24;:::i;:::-;11165:5;11162:35;11152:2;;11211:1;11208;11201:12;11152:2;11146:74;:::o;11227:111::-;11293:21;11308:5;11293:21;:::i;:::-;11286:5;11283:32;11273:2;;11329:1;11326;11319:12;11273:2;11267:71;:::o;11345:117::-;11414:24;11432:5;11414:24;:::i;:::-;11407:5;11404:35;11394:2;;11453:1;11450;11443:12;11394:2;11388:74;:::o",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Change",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IsActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "SetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawBTF",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "ast": {
    "absolutePath": "contracts\\BTF_ETH.sol",
    "exportedSymbols": {
      "BTF_ETH": [
        1150
      ]
    },
    "id": 1151,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 965,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "54:23:6"
      },
      {
        "id": 966,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "79:33:6"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 967,
        "nodeType": "ImportDirective",
        "scope": 1151,
        "sourceUnit": 831,
        "src": "116:55:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/ownable.sol",
        "file": "@openzeppelin/contracts/access/ownable.sol",
        "id": 968,
        "nodeType": "ImportDirective",
        "scope": 1151,
        "sourceUnit": 132,
        "src": "173:52:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/math/SafeMath.sol",
        "id": 969,
        "nodeType": "ImportDirective",
        "scope": 1151,
        "sourceUnit": 328,
        "src": "227:51:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 970,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 131,
              "src": "520:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$131",
                "typeString": "contract Ownable"
              }
            },
            "id": 971,
            "nodeType": "InheritanceSpecifier",
            "src": "520:7:6"
          }
        ],
        "contractDependencies": [
          22,
          131
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1150,
        "linearizedBaseContracts": [
          1150,
          131,
          22
        ],
        "name": "BTF_ETH",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "304dd754",
            "id": 974,
            "mutability": "mutable",
            "name": "IsActive",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1150,
            "src": "535:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 972,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "535:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 973,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "558:4:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ce606ee0",
            "id": 976,
            "mutability": "mutable",
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1150,
            "src": "569:28:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 975,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "569:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d76ea58",
            "id": 978,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1150,
            "src": "604:27:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 977,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "604:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9dfde201",
            "id": 980,
            "mutability": "mutable",
            "name": "Price",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1150,
            "src": "646:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 979,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "646:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "id": 983,
            "libraryName": {
              "contractScope": null,
              "id": 981,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 327,
              "src": "706:8:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$327",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "700:27:6",
            "typeName": {
              "id": 982,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "719:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 994,
              "nodeType": "Block",
              "src": "764:146:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 986,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "797:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "797:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 988,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 976,
                          "src": "811:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "797:27:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6572726f72206163636f756e74202d206d75737420626520636f6e7472616374206f776e6572",
                        "id": 990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "839:40:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3bf43b167890ac0bf5bea999ad333f6a310fd14a59968f98e57c7d4be6f439c",
                          "typeString": "literal_string \"error account - must be contract owner\""
                        },
                        "value": "error account - must be contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c3bf43b167890ac0bf5bea999ad333f6a310fd14a59968f98e57c7d4be6f439c",
                          "typeString": "literal_string \"error account - must be contract owner\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "775:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "775:115:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 992,
                  "nodeType": "ExpressionStatement",
                  "src": "775:115:6"
                },
                {
                  "id": 993,
                  "nodeType": "PlaceholderStatement",
                  "src": "901:1:6"
                }
              ]
            },
            "documentation": null,
            "id": 995,
            "name": "onlyContractOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:2:6"
            },
            "src": "735:175:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1009,
              "nodeType": "Block",
              "src": "968:84:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1000,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 976,
                      "src": "979:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1001,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "995:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "995:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "979:26:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1004,
                  "nodeType": "ExpressionStatement",
                  "src": "979:26:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1005,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 978,
                      "src": "1016:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1006,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 997,
                      "src": "1031:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1016:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:28:6"
                }
              ]
            },
            "documentation": null,
            "id": 1010,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 997,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1010,
                  "src": "930:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 996,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "930:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "929:23:6"
            },
            "returnParameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:0:6"
            },
            "scope": 1150,
            "src": "918:134:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1021,
              "nodeType": "Block",
              "src": "1119:45:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1017,
                      "name": "Price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "1142:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1018,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1012,
                      "src": "1150:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1142:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "1142:14:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4f5539c0",
            "id": 1022,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1015,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1014,
                  "name": "onlyContractOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 995,
                  "src": "1101:17:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1101:17:6"
              }
            ],
            "name": "SetPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1022,
                  "src": "1078:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1077:16:6"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1119:0:6"
            },
            "scope": 1150,
            "src": "1060:104:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1055,
              "nodeType": "Block",
              "src": "1480:242:6",
              "statements": [
                {
                  "assignments": [
                    1030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1030,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1055,
                      "src": "1491:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$830",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1029,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 830,
                        "src": "1491:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$830",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1034,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1032,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "1511:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1031,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "1505:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$830_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$830",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1491:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1040,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1581:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BTF_ETH_$1150",
                                    "typeString": "contract BTF_ETH"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BTF_ETH_$1150",
                                    "typeString": "contract BTF_ETH"
                                  }
                                ],
                                "id": 1039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1573:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1038,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1573:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1573:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1036,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1030,
                              "src": "1557:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$830",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 430,
                            "src": "1557:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1557:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1043,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1024,
                          "src": "1591:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1557:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e73756666696369656e74204254462062616c616e636520666f72207769746864726177616c",
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1613:41:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_320284d68e078b460731e89596abe7d553334325a7c9ef80704b13486d39f6b5",
                          "typeString": "literal_string \"insufficient BTF balance for withdrawal\""
                        },
                        "value": "insufficient BTF balance for withdrawal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_320284d68e078b460731e89596abe7d553334325a7c9ef80704b13486d39f6b5",
                          "typeString": "literal_string \"insufficient BTF balance for withdrawal\""
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1535:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1535:130:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "1535:130:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1051,
                        "name": "contractOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "1691:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1052,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1024,
                        "src": "1706:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1048,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1030,
                        "src": "1676:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$830",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 451,
                      "src": "1676:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:38:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:38:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "09b33402",
            "id": 1056,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1027,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1026,
                  "name": "onlyContractOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 995,
                  "src": "1462:17:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1462:17:6"
              }
            ],
            "name": "WithdrawBTF",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1056,
                  "src": "1430:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1429:17:6"
            },
            "returnParameters": {
              "id": 1028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1480:0:6"
            },
            "scope": 1150,
            "src": "1409:313:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1093,
              "nodeType": "Block",
              "src": "1801:291:6",
              "statements": [
                {
                  "assignments": [
                    1064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1064,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1093,
                      "src": "1812:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$830",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1063,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 830,
                        "src": "1812:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$830",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1068,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1066,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "1832:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1065,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "1826:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$830_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1826:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$830",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1812:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1072,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1886:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BTF_ETH_$1150",
                                  "typeString": "contract BTF_ETH"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_BTF_ETH_$1150",
                                  "typeString": "contract BTF_ETH"
                                }
                              ],
                              "id": 1071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1878:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1070,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1878:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1878:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1878:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1075,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1058,
                          "src": "1903:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1878:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e73756666696369656e74204554482062616c616e636520666f72207769746864726177616c",
                        "id": 1077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1937:41:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c10199ab534b30fbe04694a4fea20b8fad94322d9675e391059fad6f97212592",
                          "typeString": "literal_string \"insufficient ETH balance for withdrawal\""
                        },
                        "value": "insufficient ETH balance for withdrawal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c10199ab534b30fbe04694a4fea20b8fad94322d9675e391059fad6f97212592",
                          "typeString": "literal_string \"insufficient ETH balance for withdrawal\""
                        }
                      ],
                      "id": 1069,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1856:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:133:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1079,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:133:6"
                },
                {
                  "assignments": [
                    1081
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1081,
                      "mutability": "mutable",
                      "name": "rec",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1093,
                      "src": "2000:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 1080,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2000:15:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1086,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1084,
                        "name": "contractOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 976,
                        "src": "2030:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2022:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 1082,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2022:8:6",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:22:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2000:44:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1090,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1058,
                        "src": "2068:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1087,
                        "name": "rec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1081,
                        "src": "2055:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2055:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:21:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:21:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "94effa14",
            "id": 1094,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1061,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1060,
                  "name": "onlyContractOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 995,
                  "src": "1783:17:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1783:17:6"
              }
            ],
            "name": "WithdrawETH",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1058,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1094,
                  "src": "1751:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1751:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1750:17:6"
            },
            "returnParameters": {
              "id": 1062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1801:0:6"
            },
            "scope": 1150,
            "src": "1730:362:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1148,
              "nodeType": "Block",
              "src": "2257:390:6",
              "statements": [
                {
                  "assignments": [
                    1098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1098,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1148,
                      "src": "2268:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$830",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1097,
                        "name": "ERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 830,
                        "src": "2268:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$830",
                          "typeString": "contract ERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1102,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1100,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 978,
                        "src": "2288:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1099,
                      "name": "ERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 830,
                      "src": "2282:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ERC20_$830_$",
                        "typeString": "type(contract ERC20)"
                      }
                    },
                    "id": 1101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2282:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$830",
                      "typeString": "contract ERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2268:33:6"
                },
                {
                  "assignments": [
                    1104
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1104,
                      "mutability": "mutable",
                      "name": "amountTobuy",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1148,
                      "src": "2319:19:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1103,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2319:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1115,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1113,
                        "name": "Price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "2364:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1105,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2342:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2342:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 1109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3130",
                                "id": 1107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2352:2:6",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "3138",
                                "id": 1108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2356:2:6",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "2352:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "2342:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1111,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2341:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 257,
                      "src": "2341:22:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2341:29:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2319:51:6"
                },
                {
                  "assignments": [
                    1117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1117,
                      "mutability": "mutable",
                      "name": "curBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1148,
                      "src": "2382:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1116,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2382:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1125,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1122,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2427:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BTF_ETH_$1150",
                              "typeString": "contract BTF_ETH"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BTF_ETH_$1150",
                              "typeString": "contract BTF_ETH"
                            }
                          ],
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2419:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2419:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2419:13:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "2403:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$830",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 430,
                      "src": "2403:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2403:30:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2382:51:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1127,
                          "name": "amountTobuy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1104,
                          "src": "2452:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2466:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2452:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "596f75206e65656420746f2073656e6420736f6d65206574686572",
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2469:29:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d",
                          "typeString": "literal_string \"You need to send some ether\""
                        },
                        "value": "You need to send some ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9acd944d98c8ae0ab88f544d8f5ce84bcc3e9ee2749b1db4940bca15dfc8a6d",
                          "typeString": "literal_string \"You need to send some ether\""
                        }
                      ],
                      "id": 1126,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2444:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2444:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "2444:55:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1134,
                          "name": "amountTobuy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1104,
                          "src": "2518:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1135,
                          "name": "curBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1117,
                          "src": "2533:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2518:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f7420656e6f75676820746f6b656e7320696e207468652072657365727665",
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2545:34:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                          "typeString": "literal_string \"Not enough tokens in the reserve\""
                        },
                        "value": "Not enough tokens in the reserve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e11c8f04e2b1fb46d5ad724dbc8387e938437ecdd510be07e544e2a61a447dca",
                          "typeString": "literal_string \"Not enough tokens in the reserve\""
                        }
                      ],
                      "id": 1133,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2510:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2510:70:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1139,
                  "nodeType": "ExpressionStatement",
                  "src": "2510:70:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1143,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2606:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2606:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1145,
                        "name": "amountTobuy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "2618:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1140,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "2591:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$830",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 451,
                      "src": "2591:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2591:39:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1147,
                  "nodeType": "ExpressionStatement",
                  "src": "2591:39:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "231f23bb",
            "id": 1149,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Change",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2239:2:6"
            },
            "returnParameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2257:0:6"
            },
            "scope": 1150,
            "src": "2224:423:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1151,
        "src": "500:2150:6"
      }
    ],
    "src": "54:2598:6"
  },
  "bytecode": "0x60806040526001600060146101000a81548160ff021916908315150217905550604051620015a6380380620015a683398181016040528101906200004491906200019c565b6000620000566200017d60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000216565b600033905090565b6000815190506200019681620001fc565b92915050565b600060208284031215620001af57600080fd5b6000620001bf8482850162000185565b91505092915050565b6000620001d582620001dc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200020781620001c8565b81146200021357600080fd5b50565b61138080620002266000396000f3fe60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461013257806394effa141461015d5780639d76ea58146101795780639dfde201146101a4578063ce606ee0146101cf578063f2fde38b146101fa5761009c565b806309b33402146100a1578063231f23bb146100bd578063304dd754146100c75780634f5539c0146100f2578063715018a61461011b575b600080fd5b6100bb60048036038101906100b69190610d63565b610223565b005b6100c5610459565b005b3480156100d357600080fd5b506100dc610649565b6040516100e991906110ef565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610d63565b61065c565b005b34801561012757600080fd5b506101306106f6565b005b34801561013e57600080fd5b50610147610849565b6040516101549190611082565b60405180910390f35b61017760048036038101906101729190610d63565b610872565b005b34801561018557600080fd5b5061018e6109f6565b60405161019b9190611082565b60405180910390f35b3480156101b057600080fd5b506101b9610a1c565b6040516101c6919061120c565b60405180910390f35b3480156101db57600080fd5b506101e4610a22565b6040516101f19190611082565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190610d11565b610a48565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa906111ac565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050818173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103149190611082565b60206040518083038186803b15801561032c57600080fd5b505afa158015610340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103649190610d8c565b10156103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c9061114c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016104029291906110c6565b602060405180830381600087803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610d3a565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006104a1600354670de0b6b3a76400003402610c0a90919063ffffffff16565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104de9190611082565b60206040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610d8c565b905060008211610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a906111ec565b60405180910390fd5b808211156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad906111cc565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105f192919061109d565b602060405180830381600087803b15801561060b57600080fd5b505af115801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610d3a565b50505050565b600060149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e3906111ac565b60405180910390fd5b8060038190555050565b6106fe610c54565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461078b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107829061116c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610902576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f9906111ac565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050813073ffffffffffffffffffffffffffffffffffffffff16311015610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a9061118c565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156109f0573d6000803e3d6000fd5b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a50610c54565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad49061116c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b449061112c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610c4c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610c5c565b905092915050565b600033905090565b60008083118290610ca3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9a919061110a565b60405180910390fd5b506000838581610caf57fe5b049050809150509392505050565b600081359050610ccc81611305565b92915050565b600081519050610ce18161131c565b92915050565b600081359050610cf681611333565b92915050565b600081519050610d0b81611333565b92915050565b600060208284031215610d2357600080fd5b6000610d3184828501610cbd565b91505092915050565b600060208284031215610d4c57600080fd5b6000610d5a84828501610cd2565b91505092915050565b600060208284031215610d7557600080fd5b6000610d8384828501610ce7565b91505092915050565b600060208284031215610d9e57600080fd5b6000610dac84828501610cfc565b91505092915050565b610dbe8161128b565b82525050565b610dcd81611243565b82525050565b610ddc81611255565b82525050565b6000610ded82611227565b610df78185611232565b9350610e078185602086016112c1565b610e10816112f4565b840191505092915050565b6000610e28602683611232565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e8e602783611232565b91507f696e73756666696369656e74204254462062616c616e636520666f722077697460008301527f6864726177616c000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ef4602083611232565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610f34602783611232565b91507f696e73756666696369656e74204554482062616c616e636520666f722077697460008301527f6864726177616c000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f9a602683611232565b91507f6572726f72206163636f756e74202d206d75737420626520636f6e747261637460008301527f206f776e657200000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611000602083611232565b91507f4e6f7420656e6f75676820746f6b656e7320696e2074686520726573657276656000830152602082019050919050565b6000611040601b83611232565b91507f596f75206e65656420746f2073656e6420736f6d6520657468657200000000006000830152602082019050919050565b61107c81611281565b82525050565b60006020820190506110976000830184610dc4565b92915050565b60006040820190506110b26000830185610db5565b6110bf6020830184611073565b9392505050565b60006040820190506110db6000830185610dc4565b6110e86020830184611073565b9392505050565b60006020820190506111046000830184610dd3565b92915050565b600060208201905081810360008301526111248184610de2565b905092915050565b6000602082019050818103600083015261114581610e1b565b9050919050565b6000602082019050818103600083015261116581610e81565b9050919050565b6000602082019050818103600083015261118581610ee7565b9050919050565b600060208201905081810360008301526111a581610f27565b9050919050565b600060208201905081810360008301526111c581610f8d565b9050919050565b600060208201905081810360008301526111e581610ff3565b9050919050565b6000602082019050818103600083015261120581611033565b9050919050565b60006020820190506112216000830184611073565b92915050565b600081519050919050565b600082825260208201905092915050565b600061124e82611261565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112968261129d565b9050919050565b60006112a8826112af565b9050919050565b60006112ba82611261565b9050919050565b60005b838110156112df5780820151818401526020810190506112c4565b838111156112ee576000848401525b50505050565b6000601f19601f8301169050919050565b61130e81611243565b811461131957600080fd5b50565b61132581611255565b811461133057600080fd5b50565b61133c81611281565b811461134757600080fd5b5056fea264697066735822122097f9df21d841adf5617e75b1799b2bcd1601cbfacdcd0755ae0e6a904d35689764736f6c63430007000033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461013257806394effa141461015d5780639d76ea58146101795780639dfde201146101a4578063ce606ee0146101cf578063f2fde38b146101fa5761009c565b806309b33402146100a1578063231f23bb146100bd578063304dd754146100c75780634f5539c0146100f2578063715018a61461011b575b600080fd5b6100bb60048036038101906100b69190610d63565b610223565b005b6100c5610459565b005b3480156100d357600080fd5b506100dc610649565b6040516100e991906110ef565b60405180910390f35b3480156100fe57600080fd5b5061011960048036038101906101149190610d63565b61065c565b005b34801561012757600080fd5b506101306106f6565b005b34801561013e57600080fd5b50610147610849565b6040516101549190611082565b60405180910390f35b61017760048036038101906101729190610d63565b610872565b005b34801561018557600080fd5b5061018e6109f6565b60405161019b9190611082565b60405180910390f35b3480156101b057600080fd5b506101b9610a1c565b6040516101c6919061120c565b60405180910390f35b3480156101db57600080fd5b506101e4610a22565b6040516101f19190611082565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190610d11565b610a48565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102aa906111ac565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050818173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103149190611082565b60206040518083038186803b15801561032c57600080fd5b505afa158015610340573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103649190610d8c565b10156103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039c9061114c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016104029291906110c6565b602060405180830381600087803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104549190610d3a565b505050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006104a1600354670de0b6b3a76400003402610c0a90919063ffffffff16565b905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104de9190611082565b60206040518083038186803b1580156104f657600080fd5b505afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610d8c565b905060008211610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056a906111ec565b60405180910390fd5b808211156105b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ad906111cc565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105f192919061109d565b602060405180830381600087803b15801561060b57600080fd5b505af115801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190610d3a565b50505050565b600060149054906101000a900460ff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e3906111ac565b60405180910390fd5b8060038190555050565b6106fe610c54565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461078b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107829061116c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610902576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f9906111ac565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050813073ffffffffffffffffffffffffffffffffffffffff16311015610983576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097a9061118c565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156109f0573d6000803e3d6000fd5b50505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a50610c54565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610add576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad49061116c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b449061112c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610c4c83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610c5c565b905092915050565b600033905090565b60008083118290610ca3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9a919061110a565b60405180910390fd5b506000838581610caf57fe5b049050809150509392505050565b600081359050610ccc81611305565b92915050565b600081519050610ce18161131c565b92915050565b600081359050610cf681611333565b92915050565b600081519050610d0b81611333565b92915050565b600060208284031215610d2357600080fd5b6000610d3184828501610cbd565b91505092915050565b600060208284031215610d4c57600080fd5b6000610d5a84828501610cd2565b91505092915050565b600060208284031215610d7557600080fd5b6000610d8384828501610ce7565b91505092915050565b600060208284031215610d9e57600080fd5b6000610dac84828501610cfc565b91505092915050565b610dbe8161128b565b82525050565b610dcd81611243565b82525050565b610ddc81611255565b82525050565b6000610ded82611227565b610df78185611232565b9350610e078185602086016112c1565b610e10816112f4565b840191505092915050565b6000610e28602683611232565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e8e602783611232565b91507f696e73756666696369656e74204254462062616c616e636520666f722077697460008301527f6864726177616c000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ef4602083611232565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b6000610f34602783611232565b91507f696e73756666696369656e74204554482062616c616e636520666f722077697460008301527f6864726177616c000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f9a602683611232565b91507f6572726f72206163636f756e74202d206d75737420626520636f6e747261637460008301527f206f776e657200000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611000602083611232565b91507f4e6f7420656e6f75676820746f6b656e7320696e2074686520726573657276656000830152602082019050919050565b6000611040601b83611232565b91507f596f75206e65656420746f2073656e6420736f6d6520657468657200000000006000830152602082019050919050565b61107c81611281565b82525050565b60006020820190506110976000830184610dc4565b92915050565b60006040820190506110b26000830185610db5565b6110bf6020830184611073565b9392505050565b60006040820190506110db6000830185610dc4565b6110e86020830184611073565b9392505050565b60006020820190506111046000830184610dd3565b92915050565b600060208201905081810360008301526111248184610de2565b905092915050565b6000602082019050818103600083015261114581610e1b565b9050919050565b6000602082019050818103600083015261116581610e81565b9050919050565b6000602082019050818103600083015261118581610ee7565b9050919050565b600060208201905081810360008301526111a581610f27565b9050919050565b600060208201905081810360008301526111c581610f8d565b9050919050565b600060208201905081810360008301526111e581610ff3565b9050919050565b6000602082019050818103600083015261120581611033565b9050919050565b60006020820190506112216000830184611073565b92915050565b600081519050919050565b600082825260208201905092915050565b600061124e82611261565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006112968261129d565b9050919050565b60006112a8826112af565b9050919050565b60006112ba82611261565b9050919050565b60005b838110156112df5780820151818401526020810190506112c4565b838111156112ee576000848401525b50505050565b6000601f19601f8301169050919050565b61130e81611243565b811461131957600080fd5b50565b61132581611255565b811461133057600080fd5b50565b61133c81611281565b811461134757600080fd5b5056fea264697066735822122097f9df21d841adf5617e75b1799b2bcd1601cbfacdcd0755ae0e6a904d35689764736f6c63430007000033",
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang",
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "evmVersion": "petersburg"
  }
}
